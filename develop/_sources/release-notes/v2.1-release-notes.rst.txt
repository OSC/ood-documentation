.. _v2.1-release-notes:

v2.1 Release Notes
==================

.. warning::

   There are some breaking changes in 2.1. See the upgrade directions below for details.


Administrative changes
----------------------

- `Breaking Changes`_
- `Deprecations`_
- `Dependency updates`_
- `SELinux changes`_
- `Dex behind Apache reverse proxy by default`_
- `Documentation changes`_
- `Upgrade directions`_

New Features
------------

- `EL9 and Ubuntu 22.04 packages`_
- `Significant changes to navbar configurations`_
- `Support for Profiles`_
- `Support for custom pages`_
- `Automatic Form Options`_
- `Support for remote files`_
- `Quick Launch Apps`_
- `Deleting old interactive app directories`_
- `Disabling interactive app versions`_
- `Recently Used apps widget`_
- `Running Sessions widget`_
- `Displaying form options`_
- `Submitting help tickets`_


Details of administrative changes
---------------------------------

Breaking Changes
................

context.json file locations have changed
****************************************

This is an internal item to Open OnDemand and not likely to really affect you at all.

In versions 2.0 and below, batch connect apps wrote a `context.json` file to
a directory like ``~/data/sys/dashboard/batch_connect/sys/<APPNAME>/context.json``.
OnDemand uses these files to cache the choices a user makes for the next time they
use that app.

Version 2.1 now writes files like ``~/ondemand/data/sys/dashboard/batch_connect/cache/<APPNAME>.json``

Deprecations
............

Autoloading during initialization is deprecated.
************************************************

This comes from the Ruby on Rails framework that Open OnDemand utilizes.
It affects initializers you may have written, for example to :ref:`add-shortcuts-to-files-menu`.

To resolve this, wrap your code in a  ``Rails.application.config.after_initialize`` block.

For example, if you have:

.. code-block:: ruby

  # /etc/ood/config/apps/dashboard/initializers/ood.rb

    OodFilesApp.candidate_favorite_paths.tap do |paths|
      # add User project space directory
      paths << FavoritePath.new("/fs/project/#{User.new.name}")
    end

You will need to modify that file like so:

.. code-block:: ruby

  # /etc/ood/config/apps/dashboard/initializers/ood.rb

    Rails.application.config.after_initialize do
      OodFilesApp.candidate_favorite_paths.tap do |paths|
        # add User project space directory
        paths << FavoritePath.new("/fs/project/#{User.new.name}")
      end
    end

NavConfig is deprecated
***********************

The initializers used to modify the navigation bar and the class
``NavConfig`` is deprecated.  The 2.x series will continue to support
this, but sites should use the ``nav_categories`` property instead.

See :ref:`limit-auto-generated-menu-bars` and the
:ref:`nav_categories configuration property <nav_categories>` for more details.

Dependency updates
..................

This release updates the following dependencies:

- Ruby 3.0

  .. warning:: The change in Ruby version means any Ruby based apps that are not provided by the OnDemand RPM must be rebuilt or supply their own ``bin/ruby`` to use the older version of ruby.

  .. note:: Ruby 2.7 is still supported and used by Ubuntu 20.04.

- NodeJS 14

  .. warning:: The change in Node version means any Node based apps that are not provided by the OnDemand RPM must be rebuilt.

- Passenger 6.0.14
- NGINX 1.20.2
- ondemand-dex 2.32.0
- OnDemand package now depends on Python 3 instead of Python 2

SELinux changes
...............

The ``ondemand_use_shell_app`` SELinux boolean was removed and replaced with ``ondemand_use_ssh``
that is enabled by default.

The ``ondemand_use_kubernetes`` SELinux boolean was added and is disabled by default.

See the :ref:`OnDemand SELinux <ood_selinux>` documentation for details

Dex behind Apache reverse proxy by default
..........................................

  .. warning::

     Dex behind the Apache reverse proxy is a behavior change from OnDemand 2.0 where the reverse proxy configuration was optional.
     This is to improve security as well as allow Apache to provide access logs.
     If you have opened ports for Dex they can be closed as all traffic to Dex will flow through Apache.

By default Dex now sits behind the Apache reverse proxy.
If you wish to go back to Dex being directly accessed set the following in :file:`/etc/ood/config/ood_portal.yml`:

   .. code-block:: yaml

      dex_uri: false

Documentation changes
.....................

As you may have noticed, we have restructured the documentation in an attempt to
group sections more logically. Please reach out if you have further suggestions on
improving our documentation in either its content or its organization.

Upgrade directions
..................

.. warning::

   As always please update the *development* or *test* instances of OnDemand installed at your center first to test and verify before you modify the *production* instance.

.. warning::

   The OnDemand upgrade has only been tested going from 2.0.x to 2.1.x.

#. Update OnDemand release RPM

   .. code-block:: sh

      sudo yum install -y https://yum.osc.edu/ondemand/2.1/ondemand-release-web-2.1-1.noarch.rpm

#. Enable dependency repos

   **RHEL/Rocky 8 only**

   .. code-block:: sh

      sudo dnf module reset nodejs
      sudo dnf module enable nodejs:14
      sudo dnf module reset ruby
      sudo dnf module enable ruby:3.0

#. Update OnDemand

   .. code-block:: sh

      sudo yum clean all
      sudo yum update ondemand

#. (Optional) If using Dex based authentiction, update the ``ondemand-dex`` package.

   .. code-block:: sh

      sudo yum update ondemand-dex

#. Update Apache configuration and restart Apache.

   .. code-block:: sh

      sudo /opt/ood/ood-portal-generator/sbin/update_ood_portal

   **RHEL/Rocky 8 only**

   .. code-block:: sh

      sudo systemctl try-restart httpd

   **RHEL/CentOS 7 only**

   .. code-block:: sh

      sudo systemctl try-restart httpd24-httpd.service

#. (Optional) If ``ondemand-dex`` was installed, restart the ``ondemand-dex`` service.

   .. code-block:: sh

      sudo systemctl try-restart ondemand-dex.service

#. (Optional) If ``ondemand-selinux`` was installed, see :ref:`ood_selinux_updates`

#. Force all PUNs to restart

   .. code-block:: sh

      sudo /opt/ood/nginx_stage/sbin/nginx_stage nginx_clean -f

#. (Optional) Remove old dependencies from prior versions of OOD if they are not used by other applications.

   .. warning::

      See `Dependency updates`_ warning before uninstalling old Ruby versions.

   **RHEL/CentOS 7 only**

   .. code-block:: sh

      sudo yum remove rh-nodejs12\* rh-ruby27\*


Details of new features
-----------------------

EL9 and Ubuntu 22.04 packages
.............................

See :ref:`Install Software <install-software>` for instructions on how
to install OnDemand using the new EL9 and Ubuntu 22.04 packages. 2.1
also has support for EL8, EL7 and Ubuntu 20.04.


Significant changes to navbar configurations
............................................

Significant changes have been made to allow for very granular
modification of the navigation bar. At a high level sites can
now modify any aspect of the navigation bar.

See :ref:`navbar_guide` and the subsequent sections for more
details.

Support for Profiles
....................

2.1 adds support for profiles.  Profiles are basically distinct
sets of configurations. For example you may have one profile that
only shows applications for the ``biology`` category and nothing
else. You may have another profile that shows all applications.
Users can then toggle between the two different profiles to have
two different views into the same Open OnDemand installation.

See :ref:`profiles_guide` for more details.

Support for custom pages
........................

2.0 allowed sites to modify the layout of the dashboard's
landing page.

2.1 extends this by allowing sites to create brand new pages
in which sites can modify the layout in the same manner you
modify the layout of the landing page.

See :ref:`custom_pages_guide` for more information.

Automatic Form Options
......................

2.1 ships with some ``form.yml`` options that populate forms automatically. This includes
``auto_primary_group``, ``auto_groups``, ``auto_accounts`` and ``auto_modules``.

See the section on :ref:`auto-bc-form-options` for all available options.

Support for remote files
........................

2.1 ships with the ability to browse, edit and download remote files from ``rclone``.
Refer to :ref:`remote-file-systems` for how to turn this feature on.

Quick Launch Apps
.................

Quick Launch Apps launch with one click and hard coded settings.  This allows for sites
with common resource requests to hard code those requests into the app such that the
user is never presented with the form.

These launch with 1 click from the user and do not allow for choices. I.e., the user
is never presented with a form to fill out, the app simply launches when clicked.

See the documentation for :ref:`quick-launch-apps` for more information.

Deleting old interactive app directories
........................................

2.1 provides a mechanism to automatically delete all the directories that interactive
applications create in ``~/ondemand/data/sys/dashboard/batch_connect/...`` after some
time period. The system provides two options for this:  One to enable the feature
altogether and the other is to specify how old a directory must be to be removed.

See :ref:`the configuration options for removing old directories <bc_clean_old_dirs>`
for more details.

Disabling interactive app versions
..................................

Sites can now disable showing interactive application versions through the
``hide_app_version`` ondemand.d property.


Recently Used Apps widget
.........................

In 2.0 we provided a way to change the dashboard layout.  Now, in 2.1 there
are more widgets to choose from, namely the ``recently_used_apps`` widget.

This widget will show the last 4 recently used applications. What's more is,
they're :ref:`quick-launch-apps` so users only need to click on them to submit
the job with the same parameters they used before.

Running Sessions widget
.......................

Along with  ``recently_used_apps`` widget above, we're also providing the
``sessions`` widget which will show the same cards that are shown in the
``My Interactive Sessions`` page.

This means users who have running interactive applications can now connect
to them through the landing page without having to navigate anywhere else.

Displaying Form options
.......................

Sites can now display form choices in the resulting connection card.

See :ref:`display-form-choices` for more information.

Submitting Help tickets
.......................

Sites can enable submitting help tickets from interactive cards.

See :ref:`support_ticket_guide` for more information on how this
behaves and how to enable it.


